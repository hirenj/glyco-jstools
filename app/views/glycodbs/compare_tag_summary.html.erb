<%= javascript_include_tag 'MochiKit/packed/MochiKit/MochiKit.js' %>
<%= javascript_include_tag 'lib/XHtmlDOM.js' %>
<%= javascript_include_tag 'lib/sugarbuilder.js' %>
<%= javascript_include_tag 'lib/sugarbuilder_pallette.js' %>
<%= javascript_include_tag 'http://yui.yahooapis.com/2.7.0/build/yahoo-dom-event/yahoo-dom-event.js' %>
<%= javascript_include_tag 'http://yui.yahooapis.com/2.7.0/build/element/element-min.js' %>
<%= javascript_include_tag 'http://yui.yahooapis.com/2.7.0/build/dragdrop/dragdrop-min.js' %>
<%= javascript_include_tag 'http://yui.yahooapis.com/2.7.0/build/container/container-min.js' %>
<%= javascript_include_tag 'http://yui.yahooapis.com/2.7.0/build/tabview/tabview-min.js' %>
<%= javascript_include_tag 'http://yui.yahooapis.com/2.7.0/build/slider/slider-min.js' %>
<%= stylesheet_link_tag 'glycodbs/structure_summary.css' %>
<%= javascript_include_tag 'lib/structure_summary_page.js' %>
<script type="text/javascript">
	function onloader() {
		out_canvases = XHtmlDOM.getElementsByClassName('result_structure',document);
		for ( a_canvas in out_canvases ) {
			sugar_canvas = out_canvases[a_canvas];
			mysvg = sugar_canvas.getElementsByTagNameNS('http://www.w3.org/2000/svg','svg')[0];
			if (mysvg) {
				sugar_canvas.targetSVG = mysvg;
				connect_slider(sugar_canvas);
			}
		}
		build_tabs();
	}
	
	connect(window,'onload',onloader);
</script>
<div id="coverage_tabs" class="yui-navset" style="width: 95%;">
	<ul class="yui-nav">
<% seen_first = true %>
<% names = @sugars.collect { |sugset| sugset.compact.first.root.name(:ic) }%>
<% for root_name in names %>
		<li <%= seen_first ? 'class="selected"' : '' %>><a><%= root_name %></a></li>
		<% seen_first = false %>
<% end %>
	</ul>
<div class="yui-content">
<% for compared_sugars in @sugars %>
<div class="sugar_result">
<div>
<div><input type="button" class="print_button" value="Print"/></div>
<% for sugar in compared_sugars %>
<div style="width: 49%; float: left;">
	<% human_tags = sugar ? sugar.name.split(',').collect { |tag| tag.gsub!(/^.*:/,''); tag.capitalize } : ['No glycans'] %>
	<h1 class="report_title"><%= human_tags.join(',') %> <%= sugar ? sugar.root.hits.to_s+' structures ' : '' %></h1>
</div>
<% end %>
<div style="clear: both; float: none;"/>
<% for sugar in compared_sugars %>
<div class="result_structure" style="float: left; height: 600px; width: 49.5%; position: relative;">
<div style="position: relative; overflow: auto; height: 100%; width: 100%;">
	<% if sugar != nil %>
	<% @sugar = sugar %>
	<%= render :partial => "sviewer/render", :locals => { :sugar => sugar, :scale => 0.5, :padding => 200, :scheme => :composite } %>
	<% end %>
</div>
</div>
<% end %>
<!-- end result_structure -->
<div style="clear: both; float: none;"/>
</div>
<div class="sugar_graphs">
<%

value_multiplier = 1
counts_keys = [] 
counts_values = []
biggest_bar = 0
data_for_label = {}
%>

<% for sugar in compared_sugars
	next unless sugar
 	(6).times { |branch_count|
		value = sugar.branch_points_count[branch_count]
       	counts_keys << branch_count.to_s
	   	counts_values << 100 * (value || 0).to_f / sugar.root.hits  * value_multiplier
 	}
 	branch_points = sugar.branch_point_totals.keys.sort_by { |bp| bp.branch_label }
	current_biggest_bar = branch_points.collect { |branch_point|
		sugar.branch_point_totals[branch_point].keys.collect {|k|
			sugar.branch_point_totals[branch_point][k]
		}.max
	}.max || 0
	if current_biggest_bar > biggest_bar
		biggest_bar = current_biggest_bar
	end
	
	all_labels = branch_points.collect { |k| k.branch_label }

		for branch_point in branch_points
			self_value = sugar.branch_point_totals[branch_point][branch_point]
			bp_label = branch_point.branch_label
			data_for_label[bp_label] ||= { :labels => [], :values => [] }
			data_for_label[bp_label][:labels] += all_labels
			data_for_label[bp_label][:values] += branch_points.collect { |k|
													(sugar.branch_point_totals[branch_point][k] || 0).to_f * 100 * value_multiplier / self_value
												 }
		end
		value_multiplier *= -1
	end %>
	
	<div class="summary_branch_graphs">
	<% for label in data_for_label.keys %>
	<div class="single_branch_graph">
		<div>Branch <%= label %></div>
		<div class="branch_graph_svg">
			<%= render_hash_as_bar_chart(data_for_label[label][:labels],data_for_label[label][:values],100,['#7C8FBB','#2D50A2'],['#ff0000','#ffbbbb'] ) %>
		</div>
	</div>
	<% end %>
	
	<div class="single_branch_graph">
	<div class="branch_graph_svg branch_graph_svg_wide">
		<div>Branching</div>
		<%= render_hash_as_bar_chart(counts_keys,counts_values,100,['#7C8FBB','#2D50A2'],['#ff0000','#ffbbbb'])%>
		</div>
	</div>
	</div>

</div>
<!-- end sugar_result -->
</div>
<% end %>
</div>
</div>